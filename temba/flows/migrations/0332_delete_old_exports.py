# Generated by Django 4.2.8 on 2024-03-07 12:24

from django.core.files.storage import default_storage
from django.db import migrations


def delete_old_exports(apps, schema_editor):  # pragma: no cover
    ExportFlowResultsTask = apps.get_model("flows", "ExportFlowResultsTask")
    num_deleted = 0
    num_skipped = 0

    for task in ExportFlowResultsTask.objects.all():
        storage_path = f"orgs/{task.org_id}/results_exports/{task.uuid}.xlsx"

        try:
            default_storage.delete(storage_path)

            task.notifications.all().delete()
            task.delete()

            num_deleted += 1
        except Exception:
            print(f"Skipping deletion of old results export {task.uuid} because stored file could not be deleted.")
            num_skipped += 1

    if num_deleted or num_skipped:
        print(f"Deleted {num_deleted} old results exports and skipped {num_skipped} old results exports.")


def reverse(apps, schema_editor):  # pragma: no cover
    pass


def apply_manual():  # pragma: no cover
    from django.apps import apps

    delete_old_exports(apps, None)


class Migration(migrations.Migration):
    dependencies = [
        ("flows", "0331_exportflowresultstask_item_count_and_more"),
    ]

    operations = [migrations.RunPython(delete_old_exports, reverse)]
