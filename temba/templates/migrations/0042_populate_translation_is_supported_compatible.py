# Generated by Django 5.0.6 on 2024-07-12 16:13

from django.db import migrations


def populate_translation_is_supported_compatible(apps, schema_editor):  # pragma: no cover
    Template = apps.get_model("templates", "Template")
    templates_updated = 0
    translations_updated = 0

    for template in Template.objects.exclude(translations=None).select_related("base_translation"):
        if not template.base_translation:
            template.base_translation = template.translations.order_by("id").first()
            template.save(update_fields=("base_translation",))
            templates_updated += 1

        for trans in template.translations.all():
            is_supported = trans.status != "X"
            is_compatible = trans.variables == template.base_translation.variables

            update_fields = []
            if is_supported != trans.is_supported:
                trans.is_supported = is_supported
                update_fields.append("is_supported")
            if is_compatible != trans.is_compatible:
                trans.is_compatible = is_compatible
                update_fields.append("is_compatible")

            if update_fields:
                trans.save(update_fields=update_fields)
                translations_updated += 1

    if templates_updated or translations_updated:
        print(f"Updated {templates_updated} templates and {translations_updated} template translations")


class Migration(migrations.Migration):

    dependencies = [("templates", "0041_templatetranslation_is_compatible_and_more")]

    operations = [migrations.RunPython(populate_translation_is_supported_compatible, migrations.RunPython.noop)]
